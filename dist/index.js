!function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=1)}([function(t,e,i){"use strict";e.__esModule=!0,e.updateListChildElements=e.getEl=void 0,e.getEl=function(t){return document.querySelector(t)};e.updateListChildElements=function(t,i){if(t&&i){var s=e.getEl(t),r=i.map((function(t){return function(t){var e=t.content,i=t.priority,s=t.isDone;return'\n        <div class="item" id="'+t.getId()+'">\n            <div class="is-done '+(s?"--ok":"")+'"></div>\n            <span class="content">'+e+'</span>\n            <span class="priority">('+i[0]+')</span>\n            <span class="remove">삭제</span>\n        </div>\n    '}(t)})).join("");s.innerHTML="",s.innerHTML=r}}},function(t,e,i){"use strict";e.__esModule=!0;var s=i(2),r=i(3),n=new s.Store("todolisttypescriptstoreid");new r.Controller(n).initialize()},function(t,e,i){"use strict";e.__esModule=!0,e.Store=void 0;var s=i(0),r=function(){function t(t){this.id="",this.progressList=[],this.doneList=[],this.inputPriority="medium",this.id=t}return t.prototype.getProgressItem=function(t){return this.progressList.find((function(e){return e.getId()===t}))},t.prototype.getDoneItem=function(t){return this.doneList.find((function(e){return e.getId()===t}))},t.prototype.getProgressList=function(){return this.progressList},t.prototype.getDoneList=function(){return this.doneList},t.prototype.addProgressItem=function(t){if(t)return t.isDone=!1,this.progressList.push(t),this.progressList.sort((function(t,e){return e.getDate()-t.getDate()})),s.updateListChildElements(".in-progress",this.progressList),t},t.prototype.addDoneItem=function(t){if(t)return t.isDone=!0,this.doneList.push(t),this.doneList.sort((function(t,e){return e.getDate()-t.getDate()})),s.updateListChildElements(".done",this.doneList),t},t.prototype.moveProgressToDone=function(t){var e=this.getProgressItem(t);if(e)return this.addDoneItem(e),this.removeProgressItem(t),e},t.prototype.moveDoneToProgress=function(t){var e=this.getDoneItem(t);if(e)return this.addProgressItem(e),this.removeDoneItem(t),e},t.prototype.removeProgressItem=function(t){var e=this.progressList.findIndex((function(e){return e.getId()===t}));if(-1!==e)return this.progressList.splice(e,1),s.updateListChildElements(".in-progress",this.progressList),this.progressList},t.prototype.removeDoneItem=function(t){var e=this.doneList.findIndex((function(e){return e.getId()===t}));if(-1!==e)return this.doneList.splice(e,1),s.updateListChildElements(".done",this.doneList),this.doneList},t.prototype.clearProgressList=function(){this.progressList=[]},t.prototype.clearDoneList=function(){this.doneList=[]},t}();e.Store=r},function(t,e,i){"use strict";e.__esModule=!0,e.Controller=void 0;var s=i(4),r=i(0),n=function(){function t(t){this.store=null,this.progressIdList=[],this.doneIdList=[],this.store=t}return t.prototype.initialize=function(){var t,e;if(this.store){null===(t=r.getEl(".input-button"))||void 0===t||t.addEventListener("click",this.clickAddItemEventHandler.bind(this),!1),null===(e=r.getEl(".priority-buttons"))||void 0===e||e.addEventListener("click",this.clickPriorityEventHandler.bind(this),!0);var i=this.store.getProgressList(),s=this.store.getDoneList();i&&i.length&&(this.progressIdList=i.map((function(t){return t.getId()}))),s&&s.length&&(this.doneIdList=s.map((function(t){return t.getId()}))),this.registerListEvent(this.getListToIdList(this.store.getProgressList())),this.registerListEvent(this.getListToIdList(this.store.getDoneList()))}else console.error("this.store is null!")},t.prototype.getNewId=function(){return"id-"+Date.now()},t.prototype.getListToIdList=function(t){return t.map((function(t){return t.getId()}))},t.prototype.registerItemEvent=function(t){var e=r.getEl("#"+t).children;console.log(e),e[0].addEventListener("click",this.clickToggleDoneEventHandler.bind(this),!1),e[3].addEventListener("click",this.clickRemoveEventHandler.bind(this),!1)},t.prototype.registerListEvent=function(t){var e=this;t.forEach((function(t){e.registerItemEvent(t)}))},t.prototype.clickToggleDoneEventHandler=function(t){console.log(t);var e=t.target.parentElement.id;this.progressIdList.includes(e)?this.store.moveProgressToDone(e):this.doneIdList.includes(e)&&this.store.moveDoneToProgress(e),this.progressIdList=this.getListToIdList(this.store.getProgressList()),this.registerListEvent(this.progressIdList),this.doneIdList=this.getListToIdList(this.store.getDoneList()),this.registerListEvent(this.doneIdList)},t.prototype.clickRemoveEventHandler=function(t){console.log(t);var e=t.target.parentElement.id;console.log(e),this.progressIdList.includes(e)?(this.store.removeProgressItem(e),this.progressIdList=this.getListToIdList(this.store.getProgressList()),this.registerListEvent(this.progressIdList)):this.doneIdList.includes(e)&&(this.store.removeDoneItem(e),this.doneIdList=this.getListToIdList(this.store.getDoneList()),this.registerListEvent(this.doneIdList))},t.prototype.clickAddItemEventHandler=function(t){console.log(t);var e=r.getEl(".item-input"),i=e.value;if(i){var n=this.getNewId();this.store.addProgressItem(new s.Item(i,this.store.inputPriority,n)),this.progressIdList=this.getListToIdList(this.store.getProgressList()),this.registerListEvent(this.progressIdList),e.value="",console.log(this.store)}},t.prototype.clickPriorityEventHandler=function(t){console.log(t);var e=t.target,i=e.parentElement,s=e.classList[0];if("high"===s||"medium"===s||"low"===s){this.store.inputPriority=s;var r=0;r="high"===s?3:"medium"===s?2:1,i.children[0].className="low",i.children[1].className="medium",i.children[2].className="high";for(var n=0;n<r;n++)i.children[n].className+=" --selected"}},t}();e.Controller=n},function(t,e,i){"use strict";e.__esModule=!0,e.Item=void 0;var s=function(){function t(t,e,i){this.content="",this.priority="medium",this.isDone=!1,this.date=Date.now(),this.id="",this.content=t,this.priority=e,this.id=i}return t.prototype.getDate=function(){return this.date},t.prototype.getId=function(){return this.id},t}();e.Item=s}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3RzL3V0aWxzL3ZpZXcudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy90cy9TdG9yZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdHMvQ29udHJvbGxlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdHMvSXRlbS50cyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImdldEVsIiwic2VsZWN0b3JzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidXBkYXRlTGlzdENoaWxkRWxlbWVudHMiLCJzZWxlY3RvciIsImxpc3QiLCJ3cmFwRWxlbWVudCIsIml0ZW1FbGVtZW50cyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwicHJpb3JpdHkiLCJpc0RvbmUiLCJnZXRJZCIsImNyZWF0ZUl0ZW1FbGVtZW50Iiwiam9pbiIsImlubmVySFRNTCIsInN0b3JlIiwiU3RvcmUiLCJDb250cm9sbGVyIiwiaW5pdGlhbGl6ZSIsImlkIiwicHJvZ3Jlc3NMaXN0IiwiZG9uZUxpc3QiLCJpbnB1dFByaW9yaXR5IiwidGhpcyIsImdldFByb2dyZXNzSXRlbSIsImZpbmQiLCJlbCIsImdldERvbmVJdGVtIiwiZ2V0UHJvZ3Jlc3NMaXN0IiwiZ2V0RG9uZUxpc3QiLCJhZGRQcm9ncmVzc0l0ZW0iLCJwdXNoIiwic29ydCIsImEiLCJiIiwiZ2V0RGF0ZSIsImFkZERvbmVJdGVtIiwibW92ZVByb2dyZXNzVG9Eb25lIiwicmVtb3ZlUHJvZ3Jlc3NJdGVtIiwibW92ZURvbmVUb1Byb2dyZXNzIiwicmVtb3ZlRG9uZUl0ZW0iLCJ0YXJnZXRJZHgiLCJmaW5kSW5kZXgiLCJzcGxpY2UiLCJjbGVhclByb2dyZXNzTGlzdCIsImNsZWFyRG9uZUxpc3QiLCJwcm9ncmVzc0lkTGlzdCIsImRvbmVJZExpc3QiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xpY2tBZGRJdGVtRXZlbnRIYW5kbGVyIiwiY2xpY2tQcmlvcml0eUV2ZW50SGFuZGxlciIsImxlbmd0aCIsInJlZ2lzdGVyTGlzdEV2ZW50IiwiZ2V0TGlzdFRvSWRMaXN0IiwiY29uc29sZSIsImVycm9yIiwiZ2V0TmV3SWQiLCJEYXRlIiwibm93IiwicmVnaXN0ZXJJdGVtRXZlbnQiLCJjaGlsZE5vZGVzTGlzdCIsImNoaWxkcmVuIiwibG9nIiwiY2xpY2tUb2dnbGVEb25lRXZlbnRIYW5kbGVyIiwiY2xpY2tSZW1vdmVFdmVudEhhbmRsZXIiLCJpZExpc3QiLCJmb3JFYWNoIiwiZSIsIml0ZW1JZCIsInRhcmdldCIsInBhcmVudEVsZW1lbnQiLCJpbmNsdWRlcyIsImlucHV0RWwiLCJpdGVtQ29udGVudCIsIkl0ZW0iLCJ0YXJnZXRFbCIsInBhcmVudEVsIiwicHJpb3JpdHlWYWx1ZSIsImNsYXNzTGlzdCIsInNlbGVjdGVkSWR4TnVtIiwiY2xhc3NOYW1lIiwiZGF0ZSJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVB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SixFQUFTZixTQUFTLEdBQUdtQixVQUFZLE9BQ2pDLElBQUssSUFBSW5ILEVBQUksRUFBR0EsRUFBSWtILEVBQWdCbEgsSUFDaEMrRyxFQUFTZixTQUFTaEcsR0FBR21ILFdBQWEsZ0JBRzlDLEVBL0dBLEdBQWEsRUFBQS9ELGMsMkRDSGIsaUJBQ0ksV0FBbUJULEVBQVNDLEVBQVVVLEdBTS9CLEtBQUFYLFFBQWlCLEdBQ2pCLEtBQUFDLFNBQW9CLFNBQ3BCLEtBQUFDLFFBQWlCLEVBQ2hCLEtBQUF1RSxLQUFjeEIsS0FBS0MsTUFDbkIsS0FBQXZDLEdBQVksR0FUaEJJLEtBQUtmLFFBQVVBLEVBQ2ZlLEtBQUtkLFNBQVdBLEVBQ2hCYyxLQUFLSixHQUFLQSxFQWVsQixPQU5JLFlBQUFnQixRQUFBLFdBQ0ksT0FBT1osS0FBSzBELE1BRWhCLFlBQUF0RSxNQUFBLFdBQ0ksT0FBT1ksS0FBS0osSUFFcEIsRUFuQkEsR0FBYSxFQUFBdUQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMSk7XG4iLCJpbXBvcnQgeyBJdGVtIH0gZnJvbSAnLi4vSXRlbSc7XG5cbmV4cG9ydCBjb25zdCBnZXRFbCA9IChzZWxlY3RvcnM6c3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzKTtcbn1cblxuLy8gZXhwb3J0IGNvbnN0IGFkZEV2ZW50ID0gKHNlbGVjdG9yczpzdHJpbmcsIHR5cGU6c3RyaW5nLCBjYWxsYmFjazpGdW5jdGlvbiwgdXNlQ2FwdHVyZTpib29sZWFuKSA9PiB7XG4vLyAgICAgY29uc3QgdGFyZ2V0ID0gZ2V0RWwoc2VsZWN0b3JzKTtcbi8vICAgICBpZiAoIXRhcmdldCkge1xuLy8gICAgICAgICByZXR1cm47XG4vLyAgICAgfVxuLy8gICAgIHJldHVybiB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBjYWxsYmFjaywgdXNlQ2FwdHVyZSk7XG4vLyB9XG5cbi8vIGV4cG9ydCBjb25zdCByZW1vdmVFdmVudCA9IChzZWxlY3RvcnM6c3RyaW5nLCB0eXBlOnN0cmluZywgY2FsbGJhY2s6RnVuY3Rpb24sIHVzZUNhcHR1cmU6Ym9vbGVhbikgPT4ge1xuLy8gICAgIHJldHVybiBnZXRFbChzZWxlY3RvcnMpLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgY2FsbGJhY2ssIHVzZUNhcHR1cmUpO1xuLy8gfVxuXG5jb25zdCBjcmVhdGVJdGVtRWxlbWVudCA9IChpdGVtOkl0ZW0pID0+IHtcbiAgICBjb25zdCB7IGNvbnRlbnQsIHByaW9yaXR5LCBpc0RvbmUgfSA9IGl0ZW07XG4gICAgY29uc3QgaWQgPSBpdGVtLmdldElkKCk7XG4gICAgY29uc3QgZWxlbWVudCA9IGBcbiAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW1cIiBpZD1cIiR7aWR9XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtZG9uZSAke2lzRG9uZSA/ICctLW9rJyA6ICcnfVwiPjwvZGl2PlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJjb250ZW50XCI+JHtjb250ZW50fTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicHJpb3JpdHlcIj4oJHtwcmlvcml0eVswXX0pPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJyZW1vdmVcIj7sgq3soJw8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIGBcblxuICAgIHJldHVybiBlbGVtZW50O1xufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlTGlzdENoaWxkRWxlbWVudHMgPSAoc2VsZWN0b3I6c3RyaW5nLCBsaXN0OkFycmF5PEl0ZW0+KSA9PiB7XG4gICAgaWYgKCFzZWxlY3RvciB8fCAhbGlzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHdyYXBFbGVtZW50ID0gZ2V0RWwoc2VsZWN0b3IpO1xuICAgIGNvbnN0IGl0ZW1FbGVtZW50cyA9IGxpc3QubWFwKChpdGVtKSA9PiBjcmVhdGVJdGVtRWxlbWVudChpdGVtKSkuam9pbignJyk7XG4gICAgd3JhcEVsZW1lbnQhLmlubmVySFRNTCA9ICcnO1xuICAgIHdyYXBFbGVtZW50IS5pbm5lckhUTUwgPSBpdGVtRWxlbWVudHM7XG59IiwiaW1wb3J0IHsgU3RvcmUgfSBmcm9tICcuL3RzL1N0b3JlJztcbmltcG9ydCB7IENvbnRyb2xsZXIgfSBmcm9tICcuL3RzL0NvbnRyb2xsZXInO1xuXG5jb25zdCBzdG9yZSA9IG5ldyBTdG9yZSgndG9kb2xpc3R0eXBlc2NyaXB0c3RvcmVpZCcpO1xuY29uc3QgY29udHJvbGxlciA9IG5ldyBDb250cm9sbGVyKHN0b3JlKTtcblxuY29udHJvbGxlci5pbml0aWFsaXplKCk7IiwiaW1wb3J0IHsgUHJpb3JpdHkgfSBmcm9tICcuL2NvbmZpZy90eXBlcyc7XG5pbXBvcnQgeyBJdGVtIH0gZnJvbSAnLi9JdGVtJztcbmltcG9ydCB7IHVwZGF0ZUxpc3RDaGlsZEVsZW1lbnRzIH0gZnJvbSAnLi91dGlscy92aWV3JztcblxuZXhwb3J0IGNsYXNzIFN0b3JlIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoaWQ6c3RyaW5nKSB7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICB9XG5cbiAgICBwcml2YXRlIGlkOnN0cmluZyA9ICcnO1xuICAgIHByaXZhdGUgcHJvZ3Jlc3NMaXN0OkFycmF5PEl0ZW0+ID0gW107XG4gICAgcHJpdmF0ZSBkb25lTGlzdDpBcnJheTxJdGVtPiA9IFtdO1xuICAgIHB1YmxpYyBpbnB1dFByaW9yaXR5OlByaW9yaXR5ID0gJ21lZGl1bSc7XG5cbiAgICBwdWJsaWMgZ2V0UHJvZ3Jlc3NJdGVtKGlkOnN0cmluZykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9ncmVzc0xpc3QuZmluZChlbCA9PiBlbC5nZXRJZCgpID09PSBpZCk7XG4gICAgfVxuICAgIHB1YmxpYyBnZXREb25lSXRlbShpZDpzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZG9uZUxpc3QuZmluZChlbCA9PiBlbC5nZXRJZCgpID09PSBpZCk7XG4gICAgfVxuICAgIHB1YmxpYyBnZXRQcm9ncmVzc0xpc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2dyZXNzTGlzdDtcbiAgICB9XG4gICAgcHVibGljIGdldERvbmVMaXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kb25lTGlzdDtcbiAgICB9XG4gICAgcHVibGljIGFkZFByb2dyZXNzSXRlbShpdGVtOkl0ZW0pIHtcbiAgICAgICAgaWYgKCFpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaXRlbS5pc0RvbmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wcm9ncmVzc0xpc3QucHVzaChpdGVtKTtcbiAgICAgICAgdGhpcy5wcm9ncmVzc0xpc3Quc29ydCgoYSwgYikgPT4gYi5nZXREYXRlKCkgLSBhLmdldERhdGUoKSk7XG5cbiAgICAgICAgdXBkYXRlTGlzdENoaWxkRWxlbWVudHMoJy5pbi1wcm9ncmVzcycsIHRoaXMucHJvZ3Jlc3NMaXN0KTtcblxuICAgICAgICByZXR1cm4gaXRlbTtcbiAgICB9XG4gICAgcHVibGljIGFkZERvbmVJdGVtKGl0ZW06SXRlbSkge1xuICAgICAgICBpZiAoIWl0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpdGVtLmlzRG9uZSA9IHRydWU7XG4gICAgICAgIHRoaXMuZG9uZUxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgdGhpcy5kb25lTGlzdC5zb3J0KChhLCBiKSA9PiBiLmdldERhdGUoKSAtIGEuZ2V0RGF0ZSgpKTtcblxuICAgICAgICB1cGRhdGVMaXN0Q2hpbGRFbGVtZW50cygnLmRvbmUnLCB0aGlzLmRvbmVMaXN0KTtcblxuICAgICAgICByZXR1cm4gaXRlbTtcbiAgICB9XG4gICAgcHVibGljIG1vdmVQcm9ncmVzc1RvRG9uZShpZDpzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgaXRlbSA9IHRoaXMuZ2V0UHJvZ3Jlc3NJdGVtKGlkKTtcbiAgICAgICAgaWYgKCFpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hZGREb25lSXRlbShpdGVtKTtcbiAgICAgICAgdGhpcy5yZW1vdmVQcm9ncmVzc0l0ZW0oaWQpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfSAgIFxuICAgIHB1YmxpYyBtb3ZlRG9uZVRvUHJvZ3Jlc3MoaWQ6c3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmdldERvbmVJdGVtKGlkKTtcbiAgICAgICAgaWYgKCFpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hZGRQcm9ncmVzc0l0ZW0oaXRlbSk7XG4gICAgICAgIHRoaXMucmVtb3ZlRG9uZUl0ZW0oaWQpO1xuXG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbiAgICBwdWJsaWMgcmVtb3ZlUHJvZ3Jlc3NJdGVtKGlkOnN0cmluZykge1xuICAgICAgICBjb25zdCB0YXJnZXRJZHggPSB0aGlzLnByb2dyZXNzTGlzdC5maW5kSW5kZXgoZWwgPT4gZWwuZ2V0SWQoKSA9PT0gaWQpO1xuICAgICAgICBpZiAodGFyZ2V0SWR4ID09PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJvZ3Jlc3NMaXN0LnNwbGljZSh0YXJnZXRJZHgsIDEpO1xuXG4gICAgICAgIHVwZGF0ZUxpc3RDaGlsZEVsZW1lbnRzKCcuaW4tcHJvZ3Jlc3MnLCB0aGlzLnByb2dyZXNzTGlzdCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMucHJvZ3Jlc3NMaXN0O1xuICAgIH1cbiAgICBwdWJsaWMgcmVtb3ZlRG9uZUl0ZW0oaWQ6c3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldElkeCA9IHRoaXMuZG9uZUxpc3QuZmluZEluZGV4KGVsID0+IGVsLmdldElkKCkgPT09IGlkKTtcbiAgICAgICAgaWYgKHRhcmdldElkeCA9PT0gLTEpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRvbmVMaXN0LnNwbGljZSh0YXJnZXRJZHgsIDEpO1xuICAgICAgICBcbiAgICAgICAgdXBkYXRlTGlzdENoaWxkRWxlbWVudHMoJy5kb25lJywgdGhpcy5kb25lTGlzdCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuZG9uZUxpc3Q7XG4gICAgfVxuICAgIHB1YmxpYyBjbGVhclByb2dyZXNzTGlzdCgpIHtcbiAgICAgICAgdGhpcy5wcm9ncmVzc0xpc3QgPSBbXTtcbiAgICB9XG4gICAgcHVibGljIGNsZWFyRG9uZUxpc3QoKSB7XG4gICAgICAgIHRoaXMuZG9uZUxpc3QgPSBbXTtcbiAgICB9XG59IiwiaW1wb3J0IHsgSXRlbSB9IGZyb20gJy4vSXRlbSc7XG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gJy4vU3RvcmUnO1xuaW1wb3J0IHsgZ2V0RWwgfSBmcm9tICcuL3V0aWxzL3ZpZXcnO1xuaW1wb3J0IHsgUHJpb3JpdHkgfSBmcm9tICcuL2NvbmZpZy90eXBlcyc7XG5cbmV4cG9ydCBjbGFzcyBDb250cm9sbGVyIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3Ioc3RvcmU6U3RvcmUpIHtcbiAgICAgICAgdGhpcy5zdG9yZSA9IHN0b3JlO1xuICAgIH1cbiAgICBwcml2YXRlIHN0b3JlOlN0b3JlIHwgbnVsbCA9IG51bGw7XG4gICAgcHJpdmF0ZSBwcm9ncmVzc0lkTGlzdDpBcnJheTxzdHJpbmc+ID0gW107XG4gICAgcHJpdmF0ZSBkb25lSWRMaXN0OkFycmF5PHN0cmluZz4gPSBbXTtcblxuICAgIHB1YmxpYyBpbml0aWFsaXplKCkge1xuICAgICAgICBpZiAoIXRoaXMuc3RvcmUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ3RoaXMuc3RvcmUgaXMgbnVsbCEnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBnZXRFbCgnLmlucHV0LWJ1dHRvbicpPy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuY2xpY2tBZGRJdGVtRXZlbnRIYW5kbGVyLmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgZ2V0RWwoJy5wcmlvcml0eS1idXR0b25zJyk/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbGlja1ByaW9yaXR5RXZlbnRIYW5kbGVyLmJpbmQodGhpcyksIHRydWUpO1xuICAgICAgICBjb25zdCBwcm9ncmVzc0xpc3QgPSB0aGlzLnN0b3JlLmdldFByb2dyZXNzTGlzdCgpO1xuICAgICAgICBjb25zdCBkb25lTGlzdCA9IHRoaXMuc3RvcmUuZ2V0RG9uZUxpc3QoKTtcbiAgICAgICAgaWYgKHByb2dyZXNzTGlzdCAmJiBwcm9ncmVzc0xpc3QubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLnByb2dyZXNzSWRMaXN0ID0gcHJvZ3Jlc3NMaXN0Lm1hcChlbCA9PiBlbC5nZXRJZCgpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZG9uZUxpc3QgJiYgZG9uZUxpc3QubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmRvbmVJZExpc3QgPSBkb25lTGlzdC5tYXAoZWwgPT4gZWwuZ2V0SWQoKSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnJlZ2lzdGVyTGlzdEV2ZW50KHRoaXMuZ2V0TGlzdFRvSWRMaXN0KHRoaXMuc3RvcmUuZ2V0UHJvZ3Jlc3NMaXN0KCkpKTtcbiAgICAgICAgdGhpcy5yZWdpc3Rlckxpc3RFdmVudCh0aGlzLmdldExpc3RUb0lkTGlzdCh0aGlzLnN0b3JlLmdldERvbmVMaXN0KCkpKTtcbiAgICB9XG4gICAgcHJpdmF0ZSBnZXROZXdJZCgpIHtcbiAgICAgICAgcmV0dXJuIGBpZC0ke0RhdGUubm93KCl9YDtcbiAgICB9XG4gICAgcHJpdmF0ZSBnZXRMaXN0VG9JZExpc3QobGlzdCkge1xuICAgICAgICByZXR1cm4gbGlzdC5tYXAoZWwgPT4gZWwuZ2V0SWQoKSk7XG4gICAgfVxuICAgIHByaXZhdGUgcmVnaXN0ZXJJdGVtRXZlbnQoaWQpIHtcbiAgICAgICAgY29uc3QgY2hpbGROb2Rlc0xpc3QgPSBnZXRFbChgIyR7aWR9YCkhLmNoaWxkcmVuO1xuICAgICAgICBjb25zb2xlLmxvZyhjaGlsZE5vZGVzTGlzdCk7XG4gICAgICAgIGNoaWxkTm9kZXNMaXN0WzBdLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbGlja1RvZ2dsZURvbmVFdmVudEhhbmRsZXIuYmluZCh0aGlzKSwgZmFsc2UpO1xuICAgICAgICBjaGlsZE5vZGVzTGlzdFszXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuY2xpY2tSZW1vdmVFdmVudEhhbmRsZXIuYmluZCh0aGlzKSwgZmFsc2UpO1xuICAgIH1cbiAgICBwcml2YXRlIHJlZ2lzdGVyTGlzdEV2ZW50KGlkTGlzdDpBcnJheTxzdHJpbmc+KSB7XG4gICAgICAgIGlkTGlzdC5mb3JFYWNoKGlkID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJJdGVtRXZlbnQoaWQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcHJpdmF0ZSBjbGlja1RvZ2dsZURvbmVFdmVudEhhbmRsZXIoZTpFdmVudCkge1xuICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgY29uc3QgdGFyZ2V0RWwgPSBlLnRhcmdldCBhcyBIVE1MRWxlbWVudDtcbiAgICAgICAgY29uc3QgaXRlbUlkID0gdGFyZ2V0RWwucGFyZW50RWxlbWVudC5pZDtcbiAgICAgICAgaWYgKHRoaXMucHJvZ3Jlc3NJZExpc3QuaW5jbHVkZXMoaXRlbUlkKSkge1xuICAgICAgICAgICAgdGhpcy5zdG9yZS5tb3ZlUHJvZ3Jlc3NUb0RvbmUoaXRlbUlkKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmRvbmVJZExpc3QuaW5jbHVkZXMoaXRlbUlkKSkge1xuICAgICAgICAgICAgdGhpcy5zdG9yZS5tb3ZlRG9uZVRvUHJvZ3Jlc3MoaXRlbUlkKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByb2dyZXNzSWRMaXN0ID0gdGhpcy5nZXRMaXN0VG9JZExpc3QodGhpcy5zdG9yZS5nZXRQcm9ncmVzc0xpc3QoKSk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJMaXN0RXZlbnQodGhpcy5wcm9ncmVzc0lkTGlzdCk7XG4gICAgICAgIHRoaXMuZG9uZUlkTGlzdCA9IHRoaXMuZ2V0TGlzdFRvSWRMaXN0KHRoaXMuc3RvcmUuZ2V0RG9uZUxpc3QoKSk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJMaXN0RXZlbnQodGhpcy5kb25lSWRMaXN0KTtcbiAgICB9XG4gICAgcHJpdmF0ZSBjbGlja1JlbW92ZUV2ZW50SGFuZGxlcihlOkV2ZW50KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgICBjb25zdCB0YXJnZXRFbCA9IGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuICAgICAgICBjb25zdCBpdGVtSWQgPSB0YXJnZXRFbC5wYXJlbnRFbGVtZW50LmlkO1xuICAgICAgICBjb25zb2xlLmxvZyhpdGVtSWQpO1xuICAgICAgICBpZiAodGhpcy5wcm9ncmVzc0lkTGlzdC5pbmNsdWRlcyhpdGVtSWQpKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JlLnJlbW92ZVByb2dyZXNzSXRlbShpdGVtSWQpO1xuICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0lkTGlzdCA9IHRoaXMuZ2V0TGlzdFRvSWRMaXN0KHRoaXMuc3RvcmUuZ2V0UHJvZ3Jlc3NMaXN0KCkpO1xuICAgICAgICAgICAgdGhpcy5yZWdpc3Rlckxpc3RFdmVudCh0aGlzLnByb2dyZXNzSWRMaXN0KTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmRvbmVJZExpc3QuaW5jbHVkZXMoaXRlbUlkKSkge1xuICAgICAgICAgICAgdGhpcy5zdG9yZS5yZW1vdmVEb25lSXRlbShpdGVtSWQpO1xuICAgICAgICAgICAgdGhpcy5kb25lSWRMaXN0ID0gdGhpcy5nZXRMaXN0VG9JZExpc3QodGhpcy5zdG9yZS5nZXREb25lTGlzdCgpKTtcbiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJMaXN0RXZlbnQodGhpcy5kb25lSWRMaXN0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcml2YXRlIGNsaWNrQWRkSXRlbUV2ZW50SGFuZGxlcihlOkV2ZW50KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgICBjb25zdCBpbnB1dEVsID0gZ2V0RWwoJy5pdGVtLWlucHV0JykgYXMgSFRNTElucHV0RWxlbWVudDtcbiAgICAgICAgY29uc3QgaXRlbUNvbnRlbnQgPSBpbnB1dEVsLnZhbHVlO1xuICAgICAgICBpZiAoIWl0ZW1Db250ZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaWQgPSB0aGlzLmdldE5ld0lkKCk7XG4gICAgICAgIHRoaXMuc3RvcmUuYWRkUHJvZ3Jlc3NJdGVtKG5ldyBJdGVtKGl0ZW1Db250ZW50LCB0aGlzLnN0b3JlLmlucHV0UHJpb3JpdHksIGlkKSk7XG4gICAgICAgIHRoaXMucHJvZ3Jlc3NJZExpc3QgPSB0aGlzLmdldExpc3RUb0lkTGlzdCh0aGlzLnN0b3JlLmdldFByb2dyZXNzTGlzdCgpKTtcbiAgICAgICAgdGhpcy5yZWdpc3Rlckxpc3RFdmVudCh0aGlzLnByb2dyZXNzSWRMaXN0KTtcbiAgICAgICAgaW5wdXRFbC52YWx1ZSA9ICcnO1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnN0b3JlKTtcbiAgICB9XG4gICAgcHJpdmF0ZSBjbGlja1ByaW9yaXR5RXZlbnRIYW5kbGVyKGU6RXZlbnQpIHtcbiAgICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgICAgIGNvbnN0IHRhcmdldEVsID0gZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICAgIGNvbnN0IHBhcmVudEVsID0gdGFyZ2V0RWwucGFyZW50RWxlbWVudCBhcyBIVE1MRWxlbWVudDtcbiAgICAgICAgY29uc3QgcHJpb3JpdHlWYWx1ZSA9IHRhcmdldEVsLmNsYXNzTGlzdFswXVxuICAgICAgICBpZiAocHJpb3JpdHlWYWx1ZSAhPT0gJ2hpZ2gnICYmIHByaW9yaXR5VmFsdWUgIT09ICdtZWRpdW0nICYmIHByaW9yaXR5VmFsdWUgIT09ICdsb3cnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdG9yZS5pbnB1dFByaW9yaXR5ID0gcHJpb3JpdHlWYWx1ZSBhcyBQcmlvcml0eTtcbiAgICAgICAgbGV0IHNlbGVjdGVkSWR4TnVtID0gMDtcbiAgICAgICAgaWYgKHByaW9yaXR5VmFsdWUgPT09ICdoaWdoJykge1xuICAgICAgICAgICAgc2VsZWN0ZWRJZHhOdW0gPSAzO1xuICAgICAgICB9IGVsc2UgaWYgKHByaW9yaXR5VmFsdWUgPT09ICdtZWRpdW0nKSB7XG4gICAgICAgICAgICBzZWxlY3RlZElkeE51bSA9IDI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZWxlY3RlZElkeE51bSA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgcGFyZW50RWwuY2hpbGRyZW5bMF0uY2xhc3NOYW1lID0gJ2xvdyc7XG4gICAgICAgIHBhcmVudEVsLmNoaWxkcmVuWzFdLmNsYXNzTmFtZSA9ICdtZWRpdW0nO1xuICAgICAgICBwYXJlbnRFbC5jaGlsZHJlblsyXS5jbGFzc05hbWUgPSAnaGlnaCc7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0ZWRJZHhOdW07IGkrKykge1xuICAgICAgICAgICAgcGFyZW50RWwuY2hpbGRyZW5baV0uY2xhc3NOYW1lICs9ICcgLS1zZWxlY3RlZCc7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IHsgUHJpb3JpdHkgfSBmcm9tICcuL2NvbmZpZy90eXBlcyc7XG5cbmV4cG9ydCBjbGFzcyBJdGVtIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoY29udGVudCwgcHJpb3JpdHksIGlkKSB7XG4gICAgICAgIHRoaXMuY29udGVudCA9IGNvbnRlbnQ7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgIH1cblxuICAgIHB1YmxpYyBjb250ZW50OnN0cmluZyA9ICcnO1xuICAgIHB1YmxpYyBwcmlvcml0eTpQcmlvcml0eSA9ICdtZWRpdW0nO1xuICAgIHB1YmxpYyBpc0RvbmU6Ym9vbGVhbiA9IGZhbHNlO1xuICAgIHByaXZhdGUgZGF0ZTpudW1iZXIgPSBEYXRlLm5vdygpO1xuICAgIHByaXZhdGUgaWQ6c3RyaW5nID0gJyc7XG5cbiAgICBnZXREYXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRlO1xuICAgIH1cbiAgICBnZXRJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWQ7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=